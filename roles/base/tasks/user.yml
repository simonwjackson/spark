---
- name: Create user group
  group:
    name: "{{ user.group }}"
    state: present
  tags:
    - user

- name: Create user and assign to group
  user:
    name: "{{ user.name }}"
    group: "{{ user.group }}"
    password: "{{ user_password | password_hash('sha512') }}"
    shell: "{{ user.shell }}"
    update_password: on_create
    uid: "{{ user.uid }}"
    groups: uucp
    append: yes
  when: user_password is defined
  tags:
    - user

# - name: Create user log dir
#   file:
#     path: /home/{{ user.name }}/{{ user.log.dir }}
#     state: directory
#     owner: "{{ user.name }}"
#     group: "{{ user.group }}"
#   when: user.log.dir is defined
#   tags:
#     - user

# - name: Install logrotate
#   pacman:
#       name: logrotate
#       state: present

# - name: Push logrotate config for user logs
#   template:
#     src: logrotate.j2
#     dest: /etc/logrotate.d/user
#   when: user.log.dir is defined
#   tags:
#     - user

- name: Create user socket directory
  file:
    path: /run/user/{{ user.uid }}
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
  tags:
    - user

- name: Start user systemd instance
  service:
    name: "user@{{ user.uid }}"
    state: started
  notify: stop systemd per-user instance
  tags:
    - user

- name: Profile
  tags:
    - profile
  block:
    - name: Profile | umask
      lineinfile:
        state: present
        dest: "{{ profile.exports.XDG_DATA_HOME }}/.profile"
        regexp: '^\s*umask\s*'
        line: "umask {{ profile.umask }}"
       
    - name: Profile | paths
      lineinfile:
        state: present
        dest: "{{ profile.exports.XDG_DATA_HOME }}/.profile"
        regexp: '^\s*export\s*PATH='
        line: "export PATH={{ profile.path | join(':')}}"

    - name: Profile | exports
      lineinfile:
        state: present
        dest: "{{ profile.exports.XDG_DATA_HOME }}/.profile"
        regexp: '^\s*export\s*{{ item.key }}='
        line: "export {{ item.key }}={{ item.value }}"
      loop: "{{ profile.exports | dict2items }}"

    - name: Profile | unset
      lineinfile:
        state: present
        dest: "{{ profile.exports.XDG_DATA_HOME }}/.profile"
        regexp: '^\s*unset\s*{{ item }}='
        line: "unset {{ item }}"
      loop: "{{ profile.unset }}"
